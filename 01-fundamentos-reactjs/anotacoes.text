-> Estado:
- São variáveis que eu quero que o componente monitore;

Sintaxe:
const [variável, função_altera_valor_da_variável] = useState()

-> Manipulador de Datas:
npm i date-fns

-> Phosphor React:
- Pacote de ícones;


ESTUDAR!!!!
-> PROGRAMAÇÃO IMPERATIVA:
- O que deve ser feito (passo-a-passo);

-> PROGRAMAÇÃO DECLARATIVA:
- Quais as condições para eu ter o resultado final;

-> Uso do key:
- Quando faz o uso de uma lista/iteração com o Map, cada componente ou elemento deve ter uma propriedade chamada key;

-> 3 Principais momentos quando se tem um fluxo de renderização:
1 - Quando o estado altera;
2 - Quando a propriedade altera;
3 - Quando um componente pai renderiza novamente;

obs: não utilizar o índice do array como key!

-> Imutabilidade:
- As variáveis não sofrem mutação, ou seja, nunca alteramos um valor de uma variável na memória/aplicação. Na verdade, criamos um novo valor/espaço na memória;


-> No REACT, quando uma propriedade recebe um valor 'true', ele não precisa ser declarado:
Ex.: <textarea required={true}>, pode ser somente <textarea required>

-> Closures:
- Sempre que for atualizar uma informação e essa informação depende do valor que ela tinha anteriormente, ou seja, depende dela mesma, deve-ser usar:
ex.:
function handleLikeComment() {
  setLikeCount((state) => {
    return state + 1;
  })
}